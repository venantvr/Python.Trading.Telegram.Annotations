# Pre-commit hooks for code quality
# Install with: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [ --allow-multiple-documents ]
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: [ "--maxkb=1000" ]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: [ --fix=lf ]
      - id: name-tests-test
        args: [ --pytest-test-first ]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.1.0
    hooks:
      - id: black
        language_version: python3
        args: [ --line-length=120 ]

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [ --profile=black, --line-length=120 ]

  # Linting
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          [
            --max-line-length=120,
            "--extend-ignore=E203,W503,E501,D100,D101,D102,D103,D104,D105,D106,D107,D200,D201,D202,D205,D208,D209,D210,D211,D212,D213,D214,D215,D300,D301,D400,D401,D402,D403,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414,D415,D416,D417",
          ]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [ --ignore-missing-imports, --no-implicit-optional ]
        additional_dependencies: [ types-requests ]
        exclude: ^tests/

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [ -ll, --skip=B608 ]
        exclude: ^tests/

  # Docstring formatting (disabled for more permissive setup)
  # - repo: https://github.com/PyCQA/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: [--convention=google, --add-ignore=D103,D200,D205,D212]
  #       exclude: ^(tests/|setup.py)

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [ yaml, markdown ]
        args: [ --prose-wrap=always ]

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        exclude: ^.venv/

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [ --fix ]
        exclude: ^.github/

  # Python upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [ --py38-plus ]

  # Check for common misspellings
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: [ "--skip=.git,*.pyc,*.pyo,*.egg-info,.venv,build,dist" ]
        exclude: ^(.github/|docs/|.venv/)

  # Local hooks
  - repo: local
    hooks:
      - id: tests
        name: Run tests
        entry: python -m pytest tests/ -x --ff -q
        language: system
        pass_filenames: false
        always_run: true
        stages: [ pre-push ]

      - id: requirements-txt-fixer
        name: Fix requirements.txt
        entry: |
          python -c "import sys; lines = open('requirements.txt').readlines() if sys.argv[1:] else []; lines = [l for l in lines if l.strip() and not l.startswith('#')]; lines.sort(key=lambda s: s.lower()); open('requirements.txt', 'w').writelines(lines) if lines else None"
        language: system
        files: requirements.txt

ci:
  autofix_prs: true
  autofix_commit_msg: "[pre-commit.ci] auto fixes from pre-commit hooks"
  autoupdate_schedule: monthly
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  skip: [ tests ] # Don't run tests in pre-commit CI
